using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace supermarket
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.Write("Введите длинну очереди: ");
            Supermarket cashbox = new Supermarket(GetLengthOfTurn());
            cashbox.WorkCashOfCheckout();
        }

        static int GetLengthOfTurn()
        {
            int lengthOfTurn = 0;
            bool resultConvert = false;
            while (resultConvert == false)
            {
                resultConvert = int.TryParse(Console.ReadLine(), out lengthOfTurn);
                if (resultConvert == false)
                {
                    Console.WriteLine("Вы ввели не коректное значенеи!\nПоробуйте еще раз.");
                }
            }
            return lengthOfTurn;
        }
    }

    class Supermarket
    {
        private Queue<Buyer> _buyers = new Queue<Buyer>();
        private int _cashOfCheckout;

        public Supermarket(int longTurn)
        {
            for (int i = 0; i < longTurn; i++)
            {
                _buyers.Enqueue(new Buyer());
            }
            _cashOfCheckout = 0;
        }

        public void WorkCashOfCheckout()
        {
            int countBuyer = 0, sumProducts, cashBuyer;
            while (_buyers.Count > 0)
            {
                Buyer buyer = _buyers.Dequeue();
                cashBuyer = buyer.Cash;
                Console.WriteLine($"Сумма в кассе: {_cashOfCheckout}.\nПокупатель № {++countBuyer}. В кошельке: {cashBuyer}.");
                sumProducts = buyer.GetSumProducts();
                buyer.ShowInfo();
                Console.ReadKey();
                while (sumProducts >= cashBuyer)
                {
                    buyer.RemoveProduct();
                    sumProducts = buyer.GetSumProducts();
                }
                _cashOfCheckout += sumProducts;
                Console.WriteLine("\nСледующий покупатель.");
            }
            Console.WriteLine("Очередь закончилась.");
        }
    }

    class Buyer
    {
        private static Random _random = new Random();
        private List<Product> _products = new List<Product>();

        public int Cash { get; private set; }  

        public Buyer()
        {
            int quantityProsucts = _random.Next(1, 9);
            for (int i = 0; i < quantityProsucts; i++)
            {
                _products.Add(new Product());
            }
            Cash = _random.Next(100, 2000);
        }

        public int GetSumProducts()
        {
            int sumProducts = 0;
            foreach (Product cost in _products)
            {
                sumProducts += cost.Cost;
            }
            Console.WriteLine("Сумма всех продуктов в карзине: " + sumProducts);
            return sumProducts;
        }

        public void RemoveProduct()
        {
            Console.WriteLine("У покупателя не достаточно средств, выкладываем один из товаров.");
            int indexProduct = _random.Next(0, _products.Count - 1);
            _products.RemoveAt(indexProduct);
        }

        public void ShowInfo()
        {
            int i = 0;
            Console.WriteLine(Cash);
            foreach (var item in _products)
            {
                Console.WriteLine($"{++i}. {item.Cost}");
            }
        }
    }

    class Product
    {
        private static Random _random = new Random();

        public int Cost { get; private set; }

        public Product()
        {
            Cost = _random.Next(1, 667);
        }
    }
}
