using System;
using System.Collections.Generic;

namespace basePlayers
{
    class Program
    {
        static void Main(string[] args)
        {
            Base basePlayers = new Base();
            bool openBase = true;

            while (openBase)
            {
                Console.WriteLine("Выберите действие: \n" +
                    "1.Показать список играков.\n" +
                    "2.Добавить нового игрока.\n" +
                    "3.Забанить игрока\n" +
                    "4.Разбанить игрока.\n" +
                    "5.Удалить игрока.\n" +
                    "6.Выйти из базы.\n");

                switch (ReadNumber())
                {
                    case 1:
                        basePlayers.ShowInfo();
                        break;
                    case 2:
                        basePlayers.AddPlayer();
                        break;
                    case 3:
                        Console.Write("Введите номер игрока которого хотите забанить: ");
                        basePlayers.Ban();
                        break;
                    case 4:
                        Console.Write("Введите номер игрока которого хотите разбанить: ");
                        basePlayers.UnBan();
                        break;
                    case 5:
                        Console.Write("Введите номер игрока которого хотите удалить из базы: ");
                        basePlayers.RemovePlayer();
                        break;
                    case 6:
                        openBase = false;
                        break;
                }
                Console.ReadKey();
                Console.Clear();
            }

        }
        static int ReadNumber()
        {
            int userInput = 0;
            bool result = false;
            while (!result)
            {
                result = int.TryParse(Console.ReadLine(), out userInput);
                if (!result)
                {
                    Console.WriteLine("Вы ввели не верное значение попробуйте еще раз.");
                    continue;
                }
                if (userInput <= 0 || userInput >= 6)
                {
                    Console.WriteLine("Таких пунктов меню нет попробуйте езе раз.");
                    result = false;
                }
            }
            return userInput;
        }
    }
    class Base
    {
        private List<Player> _players = new List<Player>();

        public void AddPlayer()
        {
            int lavel = 0;
            Console.Write("Введите имя игрока: ");
            string name = Console.ReadLine();
            Console.Write("Введите уровень игрока: ");
            bool userInput = int.TryParse(Console.ReadLine(), out lavel);
            bool satusPlayer = true;
            _players.Add(new Player(name, lavel, satusPlayer));
            Console.WriteLine("Новый игрок добавлен!");
        }

        public void ShowInfo()
        {
            if (_players.Count == 0)
            {
                Console.WriteLine("В базе нету играков!");
            }
            else
            {
                for (int i = 0; i < _players.Count; i++)
                {
                    Player player = _players[i];
                    Console.WriteLine($"Порядковый номер: {i + 1}\n" +
                        $"Ник игрока: {player.Name}\n" +
                        $"Уровень игрока: {player.Lavel}");
                    if (player.IsBaned == true)
                    {
                        Console.WriteLine($"Состояние игрока: Не забанен\n");
                    }
                    else
                    {
                        Console.WriteLine($"Состояние игрока: Забанен\n");
                    }
                }
            }
        }

        public void RemovePlayer()
        {
            int numberPlayer = ReadNumber();
            if (CheсkNumberPlayer(numberPlayer))
            {
                Console.WriteLine($"Игрок {_players[numberPlayer - 1].Name} удален");
                _players.RemoveAt(numberPlayer - 1);
            }
        }

        public void Ban()
        {
            int numberPlayer = ReadNumber();
            if (CheсkNumberPlayer(numberPlayer))
            {
                _players[numberPlayer - 1].Ban();
            }
        }

        public void UnBan()
        {
            int numberPlayer = ReadNumber();
            if (CheсkNumberPlayer(numberPlayer))
            {
                _players[numberPlayer - 1].UnBan();
            }
        }

        private bool CheсkNumberPlayer(int number)
        {
            if (_players.Count < number || 0 > number)
            {
                Console.WriteLine("Игрока с таким номером нету!");
                return false;
            }
            else
            {
                return true;
            }
        }

        private int ReadNumber()
        {
            int userInput = 0;
            bool result = false;
            while (!result)
            {
                result = int.TryParse(Console.ReadLine(), out userInput);
                if (!result)
                {
                    Console.WriteLine("Вы ввели не верное значение попробуйте еще раз.");
                }
                else
                {
                    result = true;
                }
            }
            return userInput;
        }
    }
    class Player
    {
        public string Name { get; private set; }
        public int Lavel { get; private set; }
        public bool IsBaned { get; private set; }

        public Player(string name, int lavel, bool isBaned)
        {
            Name = name;
            Lavel = lavel;
            IsBaned = isBaned;
        }

        public void Ban()
        {
            ChangeStatus(false);
        }

        public void UnBan()
        {
            ChangeStatus(true);
        }

        private void ChangeStatus(bool banStatus)
        {
            if (IsBaned == banStatus)
            {
                if (banStatus == true)
                {
                    Console.WriteLine("Игрок не забанен");
                }
                else
                {
                    Console.WriteLine("Игрок забанен");
                }

            }
            else
            {
                IsBaned = banStatus;
                Console.Write($"Игрок: {Name}, ");
                if (true)
                {
                    if (IsBaned == true)
                    {
                        Console.WriteLine("разабанен\n");
                    }
                    else
                    {
                        Console.WriteLine("забанен\n");
                    }
                }

            }
        }
    }
}
